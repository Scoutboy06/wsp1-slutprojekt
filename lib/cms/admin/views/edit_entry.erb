<div class="px-4 py-4" x-data='formHandler'>
  <a
    href="<%= request.path_info.split("/")[...-2].join("/") %>"
    class="
      flex items-center gap-1 px-2 py-1 border border-black cursor-pointer w-min
      hover:bg-black hover:text-white
    "
  >
    <i class="icon">arrow_back</i>
    <span>Back</span>
  </a>

  <form
    id="edit-form"
    action="/admin/collections/<%= @collection.slug %>/<%= @entry["id"] %>/edit"
    enctype="multipart/form-data"
    method="POST"
    class="flex flex-col gap-8 mt-8"
  >
    <% @collection.fields.each do |field| %>
      <%= partial "components/_form_field",
      locals: {
        field: field,
        value: @entry[field.name],
      } %>
    <% end %>

    <button
      type="submit"
      class="
        py-2 border border-black cursor-pointer hover:bg-black hover:text-white
      "
    >Update</button>
  </form>
</div>

<script>
document.addEventListener('alpine:init', () => {
  Alpine.data('formHandler', (initialPreviews) => ({
    modifiedFiles: new Set(),
    filePreviews: Object.assign({}, initialPreviews || {}, {<%=
      @collection.fields
        .select { |field| field.type == "upload" && !!@entry[field.name]['url'] }
        .map do |field|
          nested_field = @entry[field.name]
          "\"#{field.name}\":" + {
            name: nested_field["file_name"],
            size: nil,
            dimensions: nested_field["width"] && nested_field["height"] ?
              "#{nested_field["width"]} x #{nested_field["height"]}":
              nil,
            preview: nested_field["url"],
          }.to_json
        end
        .join(", ")
    %>}),

    handleFileUpload(e, fieldName) {
      const file = e.target.files[0];
      if(!file || !file.type.startsWith('image/')) return;

      const reader = new FileReader();

      reader.onload = (e) => {
        const img = new Image();
        img.src = e.target.result;

        img.onload = () => {
          this.filePreviews[fieldName] = {
            name: file.name,
            size: (file.size / 1024).toFixed(2) + ' KB',
            dimensions: `${img.width} x ${img.height}`,
            preview: e.target.result,
          };
          this.modifiedFiles.add(fieldName);
        }
      }

      reader.readAsDataURL(file);
    },

    removeFile(fieldName) {
      delete this.filePreviews[fieldName];
      this.modifiedFiles.add(fieldName);
    },
  }))
})
</script>
